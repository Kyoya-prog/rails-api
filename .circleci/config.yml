version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2

jobs:
  build:
    docker:
      - image: circleci/ruby:3.0.0
        environment:
          RAILS_ENV: test
    working_directory: ~/saving
    steps:
      - checkout
      - restore_cache:
          name: restore result bundle install
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: bundle install
          command: bundle install --path=vendor/bundle --jobs 4 --retry 3
      - save_cache:
          name: save cash result bundle install
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
  test:
    docker:
      - image: circleci/ruby:3.0.0
        environment:
          - BUNDLER_VERSION: 2.1.4
          - RAILS_ENV: 'test'
          - DB_HOST: 127.0.0.1
      - image: circleci/mysql:5.7
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          - MYSQL_DB: saving_test
    working_directory: ~/saving
    steps:
      - checkout
      - run:
          name: wait for database
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 5m

      - restore_cache:
          name: restore cash result bundle install
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-

      - run:
          name: Install dependencies
          command: |
            gem install bundler -v 2.1.4
            bundle install --path=vendor/bundle --jobs 4 --retry 3

      - run:
          name: Database Setup
          command: |
            bundle exec rake db:create
            bundle exec rake db:schema:load

      - run:
          name: Run test
          command: bundle exec rails test


  deploy:
    machine:
      enabled: true
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - 34:98:98:c5:83:2a:c0:b1:94:a0:c2:56:2d:4c:0d:11
            - 08:a1:85:27:e7:83:c5:ae:68:8c:d2:3b:05:dc:82:70
      - run:
          name: Reflect Code
          command: ssh ${USER_NAME}@${HOST_NAME} 'cd /saving && sudo git pull origin main'
      - run:
          name: Docker task
          command: ssh ${USER_NAME}@${HOST_NAME} 'cd /saving && docker-compose build && docker-compose up -d'
      - run:
          name: database setup
          command: ssh ${USER_NAME}@${HOST_NAME} 'cd /saving && docker-compose exec app rails db:migrate RAILS_ENV=production'

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: main